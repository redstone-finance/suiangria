/* auto-generated by NAPI-RS */
/* eslint-disable */
export declare class BehaviourApi {
  disableSignatureChecks(): void
  enableSignatureChecks(): void
  setRejectNextTransaction(reason: string): void
  bumpCheckpoint(): void
}

export declare class ClockApi {
  getTimeMs(): number
  setTimeMs(timestampMs: number): void
  advanceByMillis(millis: number): void
}

export declare class CoinApi {
  mintSui(address: string, amount: number): string
  getBalance(address: string, structType?: string | undefined | null): number
  getCoins(address: string, structType?: string | undefined | null): string
}

export declare class ObjectApi {
  create(object: string): void
  get(objectId: string): string
  getPast(input: string): string
  getDynamicFields(input: string): string
  getDynamicFieldObject(input: string): string
}

export declare class PackageApi {
  publish(modules: Array<Array<number>>, dependencyIds: Array<string>, sender: string): string
  getNormalizedMoveFunction(package: string, module: string, fun: string): string
}

export declare class StateApi {
  getLatestCheckpoint(): number
  getReferenceGasPrice(): number
}

export declare class StorageApi {
  takeSnapshot(): Array<number>
  restoreFromSnapshot(snapshot: Array<number>): void
}

export declare class SuiSandbox {
  constructor()
  clockApi(): ClockApi
  objectApi(): ObjectApi
  transactionApi(): TransactionApi
  coinApi(): CoinApi
  packageApi(): PackageApi
  behaviourApi(): BehaviourApi
  stateApi(): StateApi
  storageApi(): StorageApi
}

export declare class TransactionApi {
  dryRun(transactionData: string): string
  execute(transactionData: string, signatures: Array<string>): string
  getResponse(digest: string): string
  queryBlocks(params: string): string
}
